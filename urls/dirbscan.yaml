name: dirbscan
desc: Run Dirbscan

report:
  final:
    - "{{.Output}}/directory/beautify-{{.Workspace}}.txt"
    - "{{.Output}}/directory/summary-{{.Workspace}}.csv"
    - "{{.Storages}}/paths/{{.Workspace}}/paths-{{.Workspace}}.txt"
    - "{{.Storages}}/paths/{{.Workspace}}/summary-{{.Workspace}}.csv"
  diff:
    - "{{.Output}}/fingerprint/diff-{{.Workspace}}-{{.TS}}.txt"

params:
  - inputfile: "{{.Output}}/probe/http-{{.Workspace}}.txt"
  - fuzzFile: "{{.Output}}/probe/fuzz-{{.Workspace}}.txt"
  - wordlists: "{{.Data}}/wordlists/content/small.txt"
  - fthreads: '30' # threads for single site
  - threads: '10'
  - dirbThreads: '15'
  - recursion: '0'
  - chan: '#mics'
  - lines: "30"
  - threads: '50'

pre_run:
  - CreateFolder("{{.Output}}/directory")

steps:
  # generate fuzz file
  - required:
      - "{{.inputfile}}"
    commands:
      - "cat {{.inputfile}} | {{.Binaries}}/urp -p | sort -u >> {{.fuzzFile}}"
    scripts:
      - SortU("{{.fuzzFile}}")

  - required:
      - "{{.Binaries}}/ffuf"
      - "{{.fuzzFile}}"
    source: "{{.fuzzFile}}"
    threads: '{{.dirbThreads}}'
    commands:
      - "{{.Binaries}}/ffuf -t {{.fthreads}} -timeout 15 -ac -fc '429,403,404' -D -e 'asp,aspx,pl,php,html,htm,jsp,cgi' -of json -o {{.Output}}/directory/raw-{{._id_}}.json -u '{{.line}}/FUZZ' -w {{.wordlists}}:FUZZ"
    scripts:
      # get result in csv
      - ExecCmd("cat {{.Output}}/directory/raw-{{._id_}}.json | jq -r '.results[] | [.url,.status,.length,.words,.lines,.redirectlocation] | join(\",\")' > {{.Output}}/directory/raw-{{._id_}}-{{.Workspace}}.csv")
      # join to final result
      - ExecCmd("cat {{.Output}}/directory/raw-{{._id_}}-{{.Workspace}}.csv >> {{.Output}}/directory/beautify-{{.Workspace}}.csv")
      # noti small file to telegram
      - ExecCmd("cat {{.Output}}/directory/raw-{{._id_}}-{{.Workspace}}.csv | {{.Binaries}}/csvtk pretty -I -s ' | ' -W 75 > {{.Output}}/directory/beautify-{{._id_}}-{{.Workspace}}.txt")
      - TeleMessByFile("{{.chan}}", "{{.Output}}/directory/beautify-{{._id_}}-{{.Workspace}}.txt")
      # sorting & clean up
      - SortU("{{.Output}}/directory/beautify-{{.Workspace}}.csv")
      - ExecCmd("rm -rf {{.Output}}/directory/beautify-{{._id_}}-{{.Workspace}}.txt {{.Output}}/directory/raw-{{._id_}}-{{.Workspace}}.csv {{.Output}}/directory/raw-{{._id_}}.json {{.Output}}/directory/unique-{{._id_}}.json")
    # generate final beautify every 400 domains has been scanned
    pconditions:
      - "({{._id_}} % {{.commitLength}}) == 0"
    pscripts:
      - ExecCmd("cat {{.Output}}/directory/beautify-{{.Workspace}}.csv | {{.Binaries}}/csvtk pretty -I -s ' | ' -W 75 > {{.Output}}/directory/beautify-{{.Workspace}}.txt")
      - ExecCmd("cat {{.Output}}/directory/beautify-{{.Workspace}}.txt >> {{.Storages}}/paths/{{.Workspace}}/beautify-{{.Workspace}}.txt")
      - PushFolder("{{.Storages}}/paths/")

  # clean up and notify to summary channel
  - required:
      - "{{.Output}}/directory/beautify-{{.Workspace}}.csv"
    scripts:
      - ExecCmd("cat {{.Output}}/directory/beautify-{{.Workspace}}.csv | {{.Binaries}}/csvtk pretty -I -s ' | ' -W 75 > {{.Output}}/directory/beautify-{{.Workspace}}.txt")
      - ExecCmd("cat {{.Storages}}/paths/{{.Workspace}}/paths-{{.Workspace}}.csv | {{.Binaries}}/csvtk pretty -I -s ' | ' -W 75 > {{.Storages}}/paths/{{.Workspace}}/beautify-{{.Workspace}}.txt")
      - TeleMessByFile("#dirb", "{{.Output}}/directory/beautify-{{.Workspace}}.txt")

post_run:
  - PushFolder("{{.Storages}}/paths/")

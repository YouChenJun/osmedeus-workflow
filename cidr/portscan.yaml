name: portscan
desc: portscan on 65k ports

report:
  final:
    - "{{.Output}}/portscan/open-ports.txt"
    - "{{.Output}}/portscan/http-running.txt"
    - "{{.Output}}/portscan/nmap-raw-{{.Workspace}}.txt"
    - "{{.Output}}/portscan/{{.Workspace}}-aquatone/portscan-{{.Workspace}}.html"
    - "{{.Output}}/portscan/detail-open-ports.txt"
    - "{{.Output}}/portscan/ssl-info.txt"
params:
  - inputfile: "{{.Target}}"
  - ports: "0-65535"
  - rateRustScan: "10000"
  - nmapThreads: "20"
  - httpThreads: "100"
  - screenThreads: "8"

pre_run:
  - CreateFolder("{{.Storages}}/ports/{{.Workspace}}")
  - CreateFolder("{{.Output}}/portscan")

steps:
  # do port scan first
  - required:
      - '{{.Binaries}}/rustscan'
    commands:
      - "{{.Binaries}}/rustscan --timeout 3000 -b {{.rateRustScan}} --scripts None --range {{.ports}} -a {{.inputfile}} -g >> {{.Output}}/portscan/raw-open-ports.txt"
    scripts:
      - CleanRustScan("{{.Output}}/portscan/raw-open-ports.txt", "{{.Output}}/portscan/open-ports.txt")

  # detect http running on open ports and service
  - required:
      - "{{.Output}}/portscan/open-ports.txt"
      - "{{.Output}}/portscan/raw-open-ports.txt"
    commands:
      - "cat {{.Output}}/portscan/open-ports.txt | {{.Binaries}}/cinfo -c {{.httpThreads}} > {{.Output}}/portscan/ssl-info.txt"
      - "cat {{.Output}}/portscan/open-ports.txt | {{.Binaries}}/httprobe -c {{.httpThreads}} -t 7000 > {{.Output}}/portscan/http-running.txt"
      - "cat {{.Output}}/portscan/raw-open-ports.txt | {{.Binaries}}/metabigor scan -c {{.screenThreads}} -R --tmp {{.Output}}/portscan/nmap-raw/ -o {{.Output}}/portscan/{{.Workspace}}-detail.txt"
    scripts:
      - ExecCmd("cat {{.Output}}/portscan/nmap-raw/*.nmap > {{.Output}}/portscan/nmap-raw-{{.Workspace}}.txt")


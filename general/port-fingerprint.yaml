name: port-fingerprint
desc: fingerprint service on open ports

report:
  final:
    - "{{.Output}}/portscan/nmap-raw-{{.Workspace}}.txt"
    - "{{.Output}}/portscan/detail-open-ports.txt"
params:
  - inputFile: "{{.Target}}"
  # portscan
  - nmapThreads: "30"
  - httpThreads: "100"

pre_run:
  - CreateFolder("{{.Storages}}/ports/{{.Workspace}}")
  - CreateFolder("{{.Output}}/portscan")

steps:
  # detect http running on open ports and service
  - required:
      - "{{.Output}}/portscan/open-ports.txt"
      - "{{.Output}}/portscan/raw-open-ports.txt"
    commands:
      - "cat {{.Output}}/portscan/raw-open-ports.txt | {{.Binaries}}/metabigor scan -c {{.nmapThreads}} -R --tmp {{.Output}}/portscan/nmap-raw/ -o {{.Output}}/portscan/{{.Workspace}}-detail.txt"
    scripts:
      - ExecCmd("cat {{.Output}}/portscan/nmap-raw/*.nmap > {{.Output}}/portscan/nmap-raw-{{.Workspace}}.txt")
      - Copy('{{.Output}}/portscan/http-running.txt', '{{.Storages}}/ports/{{.Workspace}}/httpport-{{.Workspace}}.txt')

  # detect http running on open ports and service
  - required:
      - "{{.Output}}/portscan/open-ports.txt"
      - "{{.Output}}/portscan/raw-open-ports.txt"
    commands:
      - "cat {{.Output}}/portscan/raw-open-ports.txt | {{.Binaries}}/metabigor scan -c {{.nmapThreads}} -R --tmp {{.Output}}/portscan/nmap-raw/ -o {{.Output}}/portscan/{{.Workspace}}-detail.txt"
    scripts:
      - ExecCmd("cat {{.Output}}/portscan/nmap-raw/*.nmap > {{.Output}}/portscan/nmap-raw-{{.Workspace}}.txt")

  # do some push
  - scripts:
      - Copy("{{.Output}}/portscan/{{.Workspace}}-detail.txt", "{{.Storages}}/ports/{{.Workspace}}/{{.Workspace}}-detail.txt")
